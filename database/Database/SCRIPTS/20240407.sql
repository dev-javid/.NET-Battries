-- role_claims
CREATE TABLE public.role_claims (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	role_id int4 NOT NULL,
	claim_type text NULL,
	claim_value text NULL,
	CONSTRAINT pk_role_claims PRIMARY KEY (id)
);
CREATE UNIQUE INDEX uk_role_claims_role_id_claim_type ON public.role_claims USING btree (role_id, claim_type);


-- roles
CREATE TABLE public.roles (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	name text NULL,
	normalized_name text NULL,
	concurrency_stamp text NULL,
	CONSTRAINT PK_roles PRIMARY KEY (id)
);
CREATE UNIQUE INDEX uk_roles_name ON public.roles USING btree (name);


-- public.user_claims definition
CREATE TABLE public.user_claims (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	user_id int4 NOT NULL,
	claim_type text NULL,
	claim_value text NULL,
	CONSTRAINT pk_user_claims PRIMARY KEY (id)
);
CREATE UNIQUE INDEX uk_user_claims_user_id_claim_type ON public.user_claims USING btree (user_id, claim_type);

-- public.user_logins definition
CREATE TABLE public.user_logins (
	login_provider text NOT NULL,
	provider_key text NOT NULL,
	provider_display_name text NULL,
	user_id int4 NOT NULL
);

-- public.user_tokens definition
CREATE TABLE public.user_tokens (
	user_id int4 NOT NULL,
	login_provider text NOT NULL,
	name text NOT NULL,
	value text NULL,
	CONSTRAINT pk_user_tokens PRIMARY KEY (user_id, login_provider, name)
);


-- public.user_roles definition
CREATE TABLE public.user_roles (
	user_id int4 NOT NULL,
	role_id int4 NOT NULL
);
CREATE UNIQUE INDEX uk_user_roles_user_id_role_id ON public.user_roles USING btree (user_id, role_id);


-- users
CREATE TABLE public.users (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	user_name text NULL,
	normalized_user_name text NULL,
	email text NULL,
	normalized_email text NULL,
	email_confirmed bool NOT NULL,
	password_hash text NULL,
	security_stamp text NULL,
	concurrency_stamp text NULL,
	phone_number text NULL,
	phone_number_confirmed bool NOT NULL,
	two_factor_enabled bool NOT NULL,
	lockout_end timestamptz NULL,
	lockout_enabled bool NOT NULL,
	access_failed_count int4 NOT NULL,
	CONSTRAINT pk_users PRIMARY KEY (id)
);
CREATE UNIQUE INDEX uk_users_email ON public.users USING btree (email);
CREATE UNIQUE INDEX uk_users_phone_number ON public.users USING btree (phone_number);
CREATE UNIQUE INDEX uk_users_user_name ON public.users USING btree (user_name);



-- seed roles
INSERT INTO public.roles VALUES (1, 'admin', 'ADMIN', NULL);
INSERT INTO public.roles VALUES (2, 'employee', 'EMPLOYEE', NULL);

-- seed admin user
-- password: Password@12345
INSERT INTO public.users VALUES (1, 'admin@example.com', 'ADMIN@EXAMPLE.COM', 'admin@example.com', 'ADMIN@EXAMPLE.COM', false, 'AQAAAAIAAYagAAAAEBCmFxmIDTa0OkWaWXXqGCJxypCbDusksPmhXyYZhVi1TXKUtbQRIoLb3Er9tLMSEA==', 'C3IILDKOUKAN52NLWCKWJ52HEZEJPQL3', 'b74c8605-e5a6-4c2f-88f1-59861dd6d367', '9090909090', false, false, NULL, true, 0);

-- seed admin role
insert into user_roles(user_id, role_id) values
(
	(select id from users where email = 'admin@example.com'),
	(select id from roles where name = 'admin')
)